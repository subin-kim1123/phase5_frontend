{"ast":null,"code":"var arrayEach = require('./_arrayEach'),\n    arrayIncludes = require('./_arrayIncludes');\n/** Used to compose bitmasks for function metadata. */\n\n\nvar BIND_FLAG = 1,\n    BIND_KEY_FLAG = 2,\n    CURRY_FLAG = 8,\n    CURRY_RIGHT_FLAG = 16,\n    PARTIAL_FLAG = 32,\n    PARTIAL_RIGHT_FLAG = 64,\n    ARY_FLAG = 128,\n    REARG_FLAG = 256,\n    FLIP_FLAG = 512;\n/** Used to associate wrap methods with their bit flags. */\n\nvar wrapFlags = [['ary', ARY_FLAG], ['bind', BIND_FLAG], ['bindKey', BIND_KEY_FLAG], ['curry', CURRY_FLAG], ['curryRight', CURRY_RIGHT_FLAG], ['flip', FLIP_FLAG], ['partial', PARTIAL_FLAG], ['partialRight', PARTIAL_RIGHT_FLAG], ['rearg', REARG_FLAG]];\n/**\n * Updates wrapper `details` based on `bitmask` flags.\n *\n * @private\n * @returns {Array} details The details to modify.\n * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n * @returns {Array} Returns `details`.\n */\n\nfunction updateWrapDetails(details, bitmask) {\n  arrayEach(wrapFlags, function (pair) {\n    var value = '_.' + pair[0];\n\n    if (bitmask & pair[1] && !arrayIncludes(details, value)) {\n      details.push(value);\n    }\n  });\n  return details.sort();\n}\n\nmodule.exports = updateWrapDetails;","map":{"version":3,"sources":["/Users/subinkim/Development/flatiron/phase5/phase5_frontend/my-app/node_modules/react-google-maps/node_modules/lodash/_updateWrapDetails.js"],"names":["arrayEach","require","arrayIncludes","BIND_FLAG","BIND_KEY_FLAG","CURRY_FLAG","CURRY_RIGHT_FLAG","PARTIAL_FLAG","PARTIAL_RIGHT_FLAG","ARY_FLAG","REARG_FLAG","FLIP_FLAG","wrapFlags","updateWrapDetails","details","bitmask","pair","value","push","sort","module","exports"],"mappings":"AAAA,IAAIA,SAAS,GAAGC,OAAO,CAAC,cAAD,CAAvB;AAAA,IACIC,aAAa,GAAGD,OAAO,CAAC,kBAAD,CAD3B;AAGA;;;AACA,IAAIE,SAAS,GAAG,CAAhB;AAAA,IACIC,aAAa,GAAG,CADpB;AAAA,IAEIC,UAAU,GAAG,CAFjB;AAAA,IAGIC,gBAAgB,GAAG,EAHvB;AAAA,IAIIC,YAAY,GAAG,EAJnB;AAAA,IAKIC,kBAAkB,GAAG,EALzB;AAAA,IAMIC,QAAQ,GAAG,GANf;AAAA,IAOIC,UAAU,GAAG,GAPjB;AAAA,IAQIC,SAAS,GAAG,GARhB;AAUA;;AACA,IAAIC,SAAS,GAAG,CACd,CAAC,KAAD,EAAQH,QAAR,CADc,EAEd,CAAC,MAAD,EAASN,SAAT,CAFc,EAGd,CAAC,SAAD,EAAYC,aAAZ,CAHc,EAId,CAAC,OAAD,EAAUC,UAAV,CAJc,EAKd,CAAC,YAAD,EAAeC,gBAAf,CALc,EAMd,CAAC,MAAD,EAASK,SAAT,CANc,EAOd,CAAC,SAAD,EAAYJ,YAAZ,CAPc,EAQd,CAAC,cAAD,EAAiBC,kBAAjB,CARc,EASd,CAAC,OAAD,EAAUE,UAAV,CATc,CAAhB;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASG,iBAAT,CAA2BC,OAA3B,EAAoCC,OAApC,EAA6C;AAC3Cf,EAAAA,SAAS,CAACY,SAAD,EAAY,UAASI,IAAT,EAAe;AAClC,QAAIC,KAAK,GAAG,OAAOD,IAAI,CAAC,CAAD,CAAvB;;AACA,QAAKD,OAAO,GAAGC,IAAI,CAAC,CAAD,CAAf,IAAuB,CAACd,aAAa,CAACY,OAAD,EAAUG,KAAV,CAAzC,EAA2D;AACzDH,MAAAA,OAAO,CAACI,IAAR,CAAaD,KAAb;AACD;AACF,GALQ,CAAT;AAMA,SAAOH,OAAO,CAACK,IAAR,EAAP;AACD;;AAEDC,MAAM,CAACC,OAAP,GAAiBR,iBAAjB","sourcesContent":["var arrayEach = require('./_arrayEach'),\n    arrayIncludes = require('./_arrayIncludes');\n\n/** Used to compose bitmasks for function metadata. */\nvar BIND_FLAG = 1,\n    BIND_KEY_FLAG = 2,\n    CURRY_FLAG = 8,\n    CURRY_RIGHT_FLAG = 16,\n    PARTIAL_FLAG = 32,\n    PARTIAL_RIGHT_FLAG = 64,\n    ARY_FLAG = 128,\n    REARG_FLAG = 256,\n    FLIP_FLAG = 512;\n\n/** Used to associate wrap methods with their bit flags. */\nvar wrapFlags = [\n  ['ary', ARY_FLAG],\n  ['bind', BIND_FLAG],\n  ['bindKey', BIND_KEY_FLAG],\n  ['curry', CURRY_FLAG],\n  ['curryRight', CURRY_RIGHT_FLAG],\n  ['flip', FLIP_FLAG],\n  ['partial', PARTIAL_FLAG],\n  ['partialRight', PARTIAL_RIGHT_FLAG],\n  ['rearg', REARG_FLAG]\n];\n\n/**\n * Updates wrapper `details` based on `bitmask` flags.\n *\n * @private\n * @returns {Array} details The details to modify.\n * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n * @returns {Array} Returns `details`.\n */\nfunction updateWrapDetails(details, bitmask) {\n  arrayEach(wrapFlags, function(pair) {\n    var value = '_.' + pair[0];\n    if ((bitmask & pair[1]) && !arrayIncludes(details, value)) {\n      details.push(value);\n    }\n  });\n  return details.sort();\n}\n\nmodule.exports = updateWrapDetails;\n"]},"metadata":{},"sourceType":"script"}