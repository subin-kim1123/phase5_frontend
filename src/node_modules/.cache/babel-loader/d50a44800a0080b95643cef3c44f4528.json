{"ast":null,"code":"var castPath = require('./_castPath'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray'),\n    isIndex = require('./_isIndex'),\n    isKey = require('./_isKey'),\n    isLength = require('./isLength'),\n    toKey = require('./_toKey');\n/**\n * Checks if `path` exists on `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @param {Function} hasFunc The function to check properties.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n */\n\n\nfunction hasPath(object, path, hasFunc) {\n  path = isKey(path, object) ? [path] : castPath(path);\n  var index = -1,\n      length = path.length,\n      result = false;\n\n  while (++index < length) {\n    var key = toKey(path[index]);\n\n    if (!(result = object != null && hasFunc(object, key))) {\n      break;\n    }\n\n    object = object[key];\n  }\n\n  if (result || ++index != length) {\n    return result;\n  }\n\n  length = object ? object.length : 0;\n  return !!length && isLength(length) && isIndex(key, length) && (isArray(object) || isArguments(object));\n}\n\nmodule.exports = hasPath;","map":{"version":3,"sources":["/Users/subinkim/Development/flatiron/phase5/phase5_frontend/my-app/node_modules/react-google-maps/node_modules/lodash/_hasPath.js"],"names":["castPath","require","isArguments","isArray","isIndex","isKey","isLength","toKey","hasPath","object","path","hasFunc","index","length","result","key","module","exports"],"mappings":"AAAA,IAAIA,QAAQ,GAAGC,OAAO,CAAC,aAAD,CAAtB;AAAA,IACIC,WAAW,GAAGD,OAAO,CAAC,eAAD,CADzB;AAAA,IAEIE,OAAO,GAAGF,OAAO,CAAC,WAAD,CAFrB;AAAA,IAGIG,OAAO,GAAGH,OAAO,CAAC,YAAD,CAHrB;AAAA,IAIII,KAAK,GAAGJ,OAAO,CAAC,UAAD,CAJnB;AAAA,IAKIK,QAAQ,GAAGL,OAAO,CAAC,YAAD,CALtB;AAAA,IAMIM,KAAK,GAAGN,OAAO,CAAC,UAAD,CANnB;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASO,OAAT,CAAiBC,MAAjB,EAAyBC,IAAzB,EAA+BC,OAA/B,EAAwC;AACtCD,EAAAA,IAAI,GAAGL,KAAK,CAACK,IAAD,EAAOD,MAAP,CAAL,GAAsB,CAACC,IAAD,CAAtB,GAA+BV,QAAQ,CAACU,IAAD,CAA9C;AAEA,MAAIE,KAAK,GAAG,CAAC,CAAb;AAAA,MACIC,MAAM,GAAGH,IAAI,CAACG,MADlB;AAAA,MAEIC,MAAM,GAAG,KAFb;;AAIA,SAAO,EAAEF,KAAF,GAAUC,MAAjB,EAAyB;AACvB,QAAIE,GAAG,GAAGR,KAAK,CAACG,IAAI,CAACE,KAAD,CAAL,CAAf;;AACA,QAAI,EAAEE,MAAM,GAAGL,MAAM,IAAI,IAAV,IAAkBE,OAAO,CAACF,MAAD,EAASM,GAAT,CAApC,CAAJ,EAAwD;AACtD;AACD;;AACDN,IAAAA,MAAM,GAAGA,MAAM,CAACM,GAAD,CAAf;AACD;;AACD,MAAID,MAAM,IAAI,EAAEF,KAAF,IAAWC,MAAzB,EAAiC;AAC/B,WAAOC,MAAP;AACD;;AACDD,EAAAA,MAAM,GAAGJ,MAAM,GAAGA,MAAM,CAACI,MAAV,GAAmB,CAAlC;AACA,SAAO,CAAC,CAACA,MAAF,IAAYP,QAAQ,CAACO,MAAD,CAApB,IAAgCT,OAAO,CAACW,GAAD,EAAMF,MAAN,CAAvC,KACJV,OAAO,CAACM,MAAD,CAAP,IAAmBP,WAAW,CAACO,MAAD,CAD1B,CAAP;AAED;;AAEDO,MAAM,CAACC,OAAP,GAAiBT,OAAjB","sourcesContent":["var castPath = require('./_castPath'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray'),\n    isIndex = require('./_isIndex'),\n    isKey = require('./_isKey'),\n    isLength = require('./isLength'),\n    toKey = require('./_toKey');\n\n/**\n * Checks if `path` exists on `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @param {Function} hasFunc The function to check properties.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n */\nfunction hasPath(object, path, hasFunc) {\n  path = isKey(path, object) ? [path] : castPath(path);\n\n  var index = -1,\n      length = path.length,\n      result = false;\n\n  while (++index < length) {\n    var key = toKey(path[index]);\n    if (!(result = object != null && hasFunc(object, key))) {\n      break;\n    }\n    object = object[key];\n  }\n  if (result || ++index != length) {\n    return result;\n  }\n  length = object ? object.length : 0;\n  return !!length && isLength(length) && isIndex(key, length) &&\n    (isArray(object) || isArguments(object));\n}\n\nmodule.exports = hasPath;\n"]},"metadata":{},"sourceType":"script"}