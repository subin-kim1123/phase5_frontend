{"ast":null,"code":"var castPath = require('./_castPath'),\n    isKey = require('./_isKey'),\n    toKey = require('./_toKey');\n/**\n * The base implementation of `_.get` without support for default values.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @returns {*} Returns the resolved value.\n */\n\n\nfunction baseGet(object, path) {\n  path = isKey(path, object) ? [path] : castPath(path);\n  var index = 0,\n      length = path.length;\n\n  while (object != null && index < length) {\n    object = object[toKey(path[index++])];\n  }\n\n  return index && index == length ? object : undefined;\n}\n\nmodule.exports = baseGet;","map":{"version":3,"sources":["/Users/subinkim/Development/flatiron/phase5/phase5_frontend/my-app/node_modules/react-google-maps/node_modules/lodash/_baseGet.js"],"names":["castPath","require","isKey","toKey","baseGet","object","path","index","length","undefined","module","exports"],"mappings":"AAAA,IAAIA,QAAQ,GAAGC,OAAO,CAAC,aAAD,CAAtB;AAAA,IACIC,KAAK,GAAGD,OAAO,CAAC,UAAD,CADnB;AAAA,IAEIE,KAAK,GAAGF,OAAO,CAAC,UAAD,CAFnB;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASG,OAAT,CAAiBC,MAAjB,EAAyBC,IAAzB,EAA+B;AAC7BA,EAAAA,IAAI,GAAGJ,KAAK,CAACI,IAAD,EAAOD,MAAP,CAAL,GAAsB,CAACC,IAAD,CAAtB,GAA+BN,QAAQ,CAACM,IAAD,CAA9C;AAEA,MAAIC,KAAK,GAAG,CAAZ;AAAA,MACIC,MAAM,GAAGF,IAAI,CAACE,MADlB;;AAGA,SAAOH,MAAM,IAAI,IAAV,IAAkBE,KAAK,GAAGC,MAAjC,EAAyC;AACvCH,IAAAA,MAAM,GAAGA,MAAM,CAACF,KAAK,CAACG,IAAI,CAACC,KAAK,EAAN,CAAL,CAAN,CAAf;AACD;;AACD,SAAQA,KAAK,IAAIA,KAAK,IAAIC,MAAnB,GAA6BH,MAA7B,GAAsCI,SAA7C;AACD;;AAEDC,MAAM,CAACC,OAAP,GAAiBP,OAAjB","sourcesContent":["var castPath = require('./_castPath'),\n    isKey = require('./_isKey'),\n    toKey = require('./_toKey');\n\n/**\n * The base implementation of `_.get` without support for default values.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @returns {*} Returns the resolved value.\n */\nfunction baseGet(object, path) {\n  path = isKey(path, object) ? [path] : castPath(path);\n\n  var index = 0,\n      length = path.length;\n\n  while (object != null && index < length) {\n    object = object[toKey(path[index++])];\n  }\n  return (index && index == length) ? object : undefined;\n}\n\nmodule.exports = baseGet;\n"]},"metadata":{},"sourceType":"script"}